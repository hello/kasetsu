// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: online_hmm.proto

#ifndef PROTOBUF_online_5fhmm_2eproto__INCLUDED
#define PROTOBUF_online_5fhmm_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace hello {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_online_5fhmm_2eproto();
void protobuf_AssignDesc_online_5fhmm_2eproto();
void protobuf_ShutdownFile_online_5fhmm_2eproto();

class RealMatrix;
class Transition;
class AlphabetHmmPrior;
class AlphabetHmmScratchPad;
class AlphabetHmmUserModel;

enum OutputId {
  SLEEP = 0,
  BED = 1
};
bool OutputId_IsValid(int value);
const OutputId OutputId_MIN = SLEEP;
const OutputId OutputId_MAX = BED;
const int OutputId_ARRAYSIZE = OutputId_MAX + 1;

const ::google::protobuf::EnumDescriptor* OutputId_descriptor();
inline const ::std::string& OutputId_Name(OutputId value) {
  return ::google::protobuf::internal::NameOfEnum(
    OutputId_descriptor(), value);
}
inline bool OutputId_Parse(
    const ::std::string& name, OutputId* value) {
  return ::google::protobuf::internal::ParseNamedEnum<OutputId>(
    OutputId_descriptor(), name, value);
}
// ===================================================================

class RealMatrix : public ::google::protobuf::Message {
 public:
  RealMatrix();
  virtual ~RealMatrix();

  RealMatrix(const RealMatrix& from);

  inline RealMatrix& operator=(const RealMatrix& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RealMatrix& default_instance();

  void Swap(RealMatrix* other);

  // implements Message ----------------------------------------------

  RealMatrix* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RealMatrix& from);
  void MergeFrom(const RealMatrix& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 num_rows = 1;
  inline bool has_num_rows() const;
  inline void clear_num_rows();
  static const int kNumRowsFieldNumber = 1;
  inline ::google::protobuf::int32 num_rows() const;
  inline void set_num_rows(::google::protobuf::int32 value);

  // required int32 num_cols = 2;
  inline bool has_num_cols() const;
  inline void clear_num_cols();
  static const int kNumColsFieldNumber = 2;
  inline ::google::protobuf::int32 num_cols() const;
  inline void set_num_cols(::google::protobuf::int32 value);

  // repeated double data = 3;
  inline int data_size() const;
  inline void clear_data();
  static const int kDataFieldNumber = 3;
  inline double data(int index) const;
  inline void set_data(int index, double value);
  inline void add_data(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      data() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_data();

  // optional string id = 4;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 4;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:hello.RealMatrix)
 private:
  inline void set_has_num_rows();
  inline void clear_has_num_rows();
  inline void set_has_num_cols();
  inline void clear_has_num_cols();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 num_rows_;
  ::google::protobuf::int32 num_cols_;
  ::google::protobuf::RepeatedField< double > data_;
  ::std::string* id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];

  friend void  protobuf_AddDesc_online_5fhmm_2eproto();
  friend void protobuf_AssignDesc_online_5fhmm_2eproto();
  friend void protobuf_ShutdownFile_online_5fhmm_2eproto();

  void InitAsDefaultInstance();
  static RealMatrix* default_instance_;
};
// -------------------------------------------------------------------

class Transition : public ::google::protobuf::Message {
 public:
  Transition();
  virtual ~Transition();

  Transition(const Transition& from);

  inline Transition& operator=(const Transition& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Transition& default_instance();

  void Swap(Transition* other);

  // implements Message ----------------------------------------------

  Transition* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Transition& from);
  void MergeFrom(const Transition& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 from = 1;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 1;
  inline ::google::protobuf::int32 from() const;
  inline void set_from(::google::protobuf::int32 value);

  // required int32 to = 2;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 2;
  inline ::google::protobuf::int32 to() const;
  inline void set_to(::google::protobuf::int32 value);

  // optional string output_id = 3;
  inline bool has_output_id() const;
  inline void clear_output_id();
  static const int kOutputIdFieldNumber = 3;
  inline const ::std::string& output_id() const;
  inline void set_output_id(const ::std::string& value);
  inline void set_output_id(const char* value);
  inline void set_output_id(const char* value, size_t size);
  inline ::std::string* mutable_output_id();
  inline ::std::string* release_output_id();
  inline void set_allocated_output_id(::std::string* output_id);

  // @@protoc_insertion_point(class_scope:hello.Transition)
 private:
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_output_id();
  inline void clear_has_output_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 from_;
  ::google::protobuf::int32 to_;
  ::std::string* output_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];

  friend void  protobuf_AddDesc_online_5fhmm_2eproto();
  friend void protobuf_AssignDesc_online_5fhmm_2eproto();
  friend void protobuf_ShutdownFile_online_5fhmm_2eproto();

  void InitAsDefaultInstance();
  static Transition* default_instance_;
};
// -------------------------------------------------------------------

class AlphabetHmmPrior : public ::google::protobuf::Message {
 public:
  AlphabetHmmPrior();
  virtual ~AlphabetHmmPrior();

  AlphabetHmmPrior(const AlphabetHmmPrior& from);

  inline AlphabetHmmPrior& operator=(const AlphabetHmmPrior& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlphabetHmmPrior& default_instance();

  void Swap(AlphabetHmmPrior* other);

  // implements Message ----------------------------------------------

  AlphabetHmmPrior* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlphabetHmmPrior& from);
  void MergeFrom(const AlphabetHmmPrior& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline const ::std::string& id() const;
  inline void set_id(const ::std::string& value);
  inline void set_id(const char* value);
  inline void set_id(const char* value, size_t size);
  inline ::std::string* mutable_id();
  inline ::std::string* release_id();
  inline void set_allocated_id(::std::string* id);

  // optional .hello.OutputId output_id = 2;
  inline bool has_output_id() const;
  inline void clear_output_id();
  static const int kOutputIdFieldNumber = 2;
  inline ::hello::OutputId output_id() const;
  inline void set_output_id(::hello::OutputId value);

  // optional int64 date_created_utc = 3;
  inline bool has_date_created_utc() const;
  inline void clear_date_created_utc();
  static const int kDateCreatedUtcFieldNumber = 3;
  inline ::google::protobuf::int64 date_created_utc() const;
  inline void set_date_created_utc(::google::protobuf::int64 value);

  // optional int64 date_updated_utc = 4;
  inline bool has_date_updated_utc() const;
  inline void clear_date_updated_utc();
  static const int kDateUpdatedUtcFieldNumber = 4;
  inline ::google::protobuf::int64 date_updated_utc() const;
  inline void set_date_updated_utc(::google::protobuf::int64 value);

  // optional .hello.RealMatrix log_state_transition_numerator = 5;
  inline bool has_log_state_transition_numerator() const;
  inline void clear_log_state_transition_numerator();
  static const int kLogStateTransitionNumeratorFieldNumber = 5;
  inline const ::hello::RealMatrix& log_state_transition_numerator() const;
  inline ::hello::RealMatrix* mutable_log_state_transition_numerator();
  inline ::hello::RealMatrix* release_log_state_transition_numerator();
  inline void set_allocated_log_state_transition_numerator(::hello::RealMatrix* log_state_transition_numerator);

  // repeated .hello.RealMatrix log_observation_model_numerator = 6;
  inline int log_observation_model_numerator_size() const;
  inline void clear_log_observation_model_numerator();
  static const int kLogObservationModelNumeratorFieldNumber = 6;
  inline const ::hello::RealMatrix& log_observation_model_numerator(int index) const;
  inline ::hello::RealMatrix* mutable_log_observation_model_numerator(int index);
  inline ::hello::RealMatrix* add_log_observation_model_numerator();
  inline const ::google::protobuf::RepeatedPtrField< ::hello::RealMatrix >&
      log_observation_model_numerator() const;
  inline ::google::protobuf::RepeatedPtrField< ::hello::RealMatrix >*
      mutable_log_observation_model_numerator();

  // repeated string log_observation_model_ids = 7;
  inline int log_observation_model_ids_size() const;
  inline void clear_log_observation_model_ids();
  static const int kLogObservationModelIdsFieldNumber = 7;
  inline const ::std::string& log_observation_model_ids(int index) const;
  inline ::std::string* mutable_log_observation_model_ids(int index);
  inline void set_log_observation_model_ids(int index, const ::std::string& value);
  inline void set_log_observation_model_ids(int index, const char* value);
  inline void set_log_observation_model_ids(int index, const char* value, size_t size);
  inline ::std::string* add_log_observation_model_ids();
  inline void add_log_observation_model_ids(const ::std::string& value);
  inline void add_log_observation_model_ids(const char* value);
  inline void add_log_observation_model_ids(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& log_observation_model_ids() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_log_observation_model_ids();

  // repeated double log_denominator = 8;
  inline int log_denominator_size() const;
  inline void clear_log_denominator();
  static const int kLogDenominatorFieldNumber = 8;
  inline double log_denominator(int index) const;
  inline void set_log_denominator(int index, double value);
  inline void add_log_denominator(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      log_denominator() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_log_denominator();

  // repeated double pi = 9;
  inline int pi_size() const;
  inline void clear_pi();
  static const int kPiFieldNumber = 9;
  inline double pi(int index) const;
  inline void set_pi(int index, double value);
  inline void add_pi(double value);
  inline const ::google::protobuf::RepeatedField< double >&
      pi() const;
  inline ::google::protobuf::RepeatedField< double >*
      mutable_pi();

  // repeated int32 end_states = 10;
  inline int end_states_size() const;
  inline void clear_end_states();
  static const int kEndStatesFieldNumber = 10;
  inline ::google::protobuf::int32 end_states(int index) const;
  inline void set_end_states(int index, ::google::protobuf::int32 value);
  inline void add_end_states(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      end_states() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_end_states();

  // repeated int32 minimum_state_durations = 11;
  inline int minimum_state_durations_size() const;
  inline void clear_minimum_state_durations();
  static const int kMinimumStateDurationsFieldNumber = 11;
  inline ::google::protobuf::int32 minimum_state_durations(int index) const;
  inline void set_minimum_state_durations(int index, ::google::protobuf::int32 value);
  inline void add_minimum_state_durations(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      minimum_state_durations() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_minimum_state_durations();

  // @@protoc_insertion_point(class_scope:hello.AlphabetHmmPrior)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_output_id();
  inline void clear_has_output_id();
  inline void set_has_date_created_utc();
  inline void clear_has_date_created_utc();
  inline void set_has_date_updated_utc();
  inline void clear_has_date_updated_utc();
  inline void set_has_log_state_transition_numerator();
  inline void clear_has_log_state_transition_numerator();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* id_;
  ::google::protobuf::int64 date_created_utc_;
  ::google::protobuf::int64 date_updated_utc_;
  ::hello::RealMatrix* log_state_transition_numerator_;
  ::google::protobuf::RepeatedPtrField< ::hello::RealMatrix > log_observation_model_numerator_;
  ::google::protobuf::RepeatedPtrField< ::std::string> log_observation_model_ids_;
  ::google::protobuf::RepeatedField< double > log_denominator_;
  ::google::protobuf::RepeatedField< double > pi_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > end_states_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > minimum_state_durations_;
  int output_id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];

  friend void  protobuf_AddDesc_online_5fhmm_2eproto();
  friend void protobuf_AssignDesc_online_5fhmm_2eproto();
  friend void protobuf_ShutdownFile_online_5fhmm_2eproto();

  void InitAsDefaultInstance();
  static AlphabetHmmPrior* default_instance_;
};
// -------------------------------------------------------------------

class AlphabetHmmScratchPad : public ::google::protobuf::Message {
 public:
  AlphabetHmmScratchPad();
  virtual ~AlphabetHmmScratchPad();

  AlphabetHmmScratchPad(const AlphabetHmmScratchPad& from);

  inline AlphabetHmmScratchPad& operator=(const AlphabetHmmScratchPad& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlphabetHmmScratchPad& default_instance();

  void Swap(AlphabetHmmScratchPad* other);

  // implements Message ----------------------------------------------

  AlphabetHmmScratchPad* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlphabetHmmScratchPad& from);
  void MergeFrom(const AlphabetHmmScratchPad& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional int64 last_date_updated_utc = 1;
  inline bool has_last_date_updated_utc() const;
  inline void clear_last_date_updated_utc();
  static const int kLastDateUpdatedUtcFieldNumber = 1;
  inline ::google::protobuf::int64 last_date_updated_utc() const;
  inline void set_last_date_updated_utc(::google::protobuf::int64 value);

  // repeated .hello.AlphabetHmmPrior model_deltas = 2;
  inline int model_deltas_size() const;
  inline void clear_model_deltas();
  static const int kModelDeltasFieldNumber = 2;
  inline const ::hello::AlphabetHmmPrior& model_deltas(int index) const;
  inline ::hello::AlphabetHmmPrior* mutable_model_deltas(int index);
  inline ::hello::AlphabetHmmPrior* add_model_deltas();
  inline const ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >&
      model_deltas() const;
  inline ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >*
      mutable_model_deltas();

  // @@protoc_insertion_point(class_scope:hello.AlphabetHmmScratchPad)
 private:
  inline void set_has_last_date_updated_utc();
  inline void clear_has_last_date_updated_utc();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int64 last_date_updated_utc_;
  ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior > model_deltas_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_online_5fhmm_2eproto();
  friend void protobuf_AssignDesc_online_5fhmm_2eproto();
  friend void protobuf_ShutdownFile_online_5fhmm_2eproto();

  void InitAsDefaultInstance();
  static AlphabetHmmScratchPad* default_instance_;
};
// -------------------------------------------------------------------

class AlphabetHmmUserModel : public ::google::protobuf::Message {
 public:
  AlphabetHmmUserModel();
  virtual ~AlphabetHmmUserModel();

  AlphabetHmmUserModel(const AlphabetHmmUserModel& from);

  inline AlphabetHmmUserModel& operator=(const AlphabetHmmUserModel& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AlphabetHmmUserModel& default_instance();

  void Swap(AlphabetHmmUserModel* other);

  // implements Message ----------------------------------------------

  AlphabetHmmUserModel* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlphabetHmmUserModel& from);
  void MergeFrom(const AlphabetHmmUserModel& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .hello.AlphabetHmmPrior models = 1;
  inline int models_size() const;
  inline void clear_models();
  static const int kModelsFieldNumber = 1;
  inline const ::hello::AlphabetHmmPrior& models(int index) const;
  inline ::hello::AlphabetHmmPrior* mutable_models(int index);
  inline ::hello::AlphabetHmmPrior* add_models();
  inline const ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >&
      models() const;
  inline ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >*
      mutable_models();

  // repeated .hello.Transition forbiddeden_motion_transitions = 2;
  inline int forbiddeden_motion_transitions_size() const;
  inline void clear_forbiddeden_motion_transitions();
  static const int kForbiddedenMotionTransitionsFieldNumber = 2;
  inline const ::hello::Transition& forbiddeden_motion_transitions(int index) const;
  inline ::hello::Transition* mutable_forbiddeden_motion_transitions(int index);
  inline ::hello::Transition* add_forbiddeden_motion_transitions();
  inline const ::google::protobuf::RepeatedPtrField< ::hello::Transition >&
      forbiddeden_motion_transitions() const;
  inline ::google::protobuf::RepeatedPtrField< ::hello::Transition >*
      mutable_forbiddeden_motion_transitions();

  // @@protoc_insertion_point(class_scope:hello.AlphabetHmmUserModel)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior > models_;
  ::google::protobuf::RepeatedPtrField< ::hello::Transition > forbiddeden_motion_transitions_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_online_5fhmm_2eproto();
  friend void protobuf_AssignDesc_online_5fhmm_2eproto();
  friend void protobuf_ShutdownFile_online_5fhmm_2eproto();

  void InitAsDefaultInstance();
  static AlphabetHmmUserModel* default_instance_;
};
// ===================================================================


// ===================================================================

// RealMatrix

// required int32 num_rows = 1;
inline bool RealMatrix::has_num_rows() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RealMatrix::set_has_num_rows() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RealMatrix::clear_has_num_rows() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RealMatrix::clear_num_rows() {
  num_rows_ = 0;
  clear_has_num_rows();
}
inline ::google::protobuf::int32 RealMatrix::num_rows() const {
  return num_rows_;
}
inline void RealMatrix::set_num_rows(::google::protobuf::int32 value) {
  set_has_num_rows();
  num_rows_ = value;
}

// required int32 num_cols = 2;
inline bool RealMatrix::has_num_cols() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RealMatrix::set_has_num_cols() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RealMatrix::clear_has_num_cols() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RealMatrix::clear_num_cols() {
  num_cols_ = 0;
  clear_has_num_cols();
}
inline ::google::protobuf::int32 RealMatrix::num_cols() const {
  return num_cols_;
}
inline void RealMatrix::set_num_cols(::google::protobuf::int32 value) {
  set_has_num_cols();
  num_cols_ = value;
}

// repeated double data = 3;
inline int RealMatrix::data_size() const {
  return data_.size();
}
inline void RealMatrix::clear_data() {
  data_.Clear();
}
inline double RealMatrix::data(int index) const {
  return data_.Get(index);
}
inline void RealMatrix::set_data(int index, double value) {
  data_.Set(index, value);
}
inline void RealMatrix::add_data(double value) {
  data_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
RealMatrix::data() const {
  return data_;
}
inline ::google::protobuf::RepeatedField< double >*
RealMatrix::mutable_data() {
  return &data_;
}

// optional string id = 4;
inline bool RealMatrix::has_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RealMatrix::set_has_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RealMatrix::clear_has_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RealMatrix::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& RealMatrix::id() const {
  return *id_;
}
inline void RealMatrix::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void RealMatrix::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void RealMatrix::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* RealMatrix::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* RealMatrix::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void RealMatrix::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Transition

// required int32 from = 1;
inline bool Transition::has_from() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Transition::set_has_from() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Transition::clear_has_from() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Transition::clear_from() {
  from_ = 0;
  clear_has_from();
}
inline ::google::protobuf::int32 Transition::from() const {
  return from_;
}
inline void Transition::set_from(::google::protobuf::int32 value) {
  set_has_from();
  from_ = value;
}

// required int32 to = 2;
inline bool Transition::has_to() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Transition::set_has_to() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Transition::clear_has_to() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Transition::clear_to() {
  to_ = 0;
  clear_has_to();
}
inline ::google::protobuf::int32 Transition::to() const {
  return to_;
}
inline void Transition::set_to(::google::protobuf::int32 value) {
  set_has_to();
  to_ = value;
}

// optional string output_id = 3;
inline bool Transition::has_output_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Transition::set_has_output_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Transition::clear_has_output_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Transition::clear_output_id() {
  if (output_id_ != &::google::protobuf::internal::kEmptyString) {
    output_id_->clear();
  }
  clear_has_output_id();
}
inline const ::std::string& Transition::output_id() const {
  return *output_id_;
}
inline void Transition::set_output_id(const ::std::string& value) {
  set_has_output_id();
  if (output_id_ == &::google::protobuf::internal::kEmptyString) {
    output_id_ = new ::std::string;
  }
  output_id_->assign(value);
}
inline void Transition::set_output_id(const char* value) {
  set_has_output_id();
  if (output_id_ == &::google::protobuf::internal::kEmptyString) {
    output_id_ = new ::std::string;
  }
  output_id_->assign(value);
}
inline void Transition::set_output_id(const char* value, size_t size) {
  set_has_output_id();
  if (output_id_ == &::google::protobuf::internal::kEmptyString) {
    output_id_ = new ::std::string;
  }
  output_id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Transition::mutable_output_id() {
  set_has_output_id();
  if (output_id_ == &::google::protobuf::internal::kEmptyString) {
    output_id_ = new ::std::string;
  }
  return output_id_;
}
inline ::std::string* Transition::release_output_id() {
  clear_has_output_id();
  if (output_id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = output_id_;
    output_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Transition::set_allocated_output_id(::std::string* output_id) {
  if (output_id_ != &::google::protobuf::internal::kEmptyString) {
    delete output_id_;
  }
  if (output_id) {
    set_has_output_id();
    output_id_ = output_id;
  } else {
    clear_has_output_id();
    output_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AlphabetHmmPrior

// optional string id = 1;
inline bool AlphabetHmmPrior::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlphabetHmmPrior::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlphabetHmmPrior::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlphabetHmmPrior::clear_id() {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    id_->clear();
  }
  clear_has_id();
}
inline const ::std::string& AlphabetHmmPrior::id() const {
  return *id_;
}
inline void AlphabetHmmPrior::set_id(const ::std::string& value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void AlphabetHmmPrior::set_id(const char* value) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(value);
}
inline void AlphabetHmmPrior::set_id(const char* value, size_t size) {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  id_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlphabetHmmPrior::mutable_id() {
  set_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    id_ = new ::std::string;
  }
  return id_;
}
inline ::std::string* AlphabetHmmPrior::release_id() {
  clear_has_id();
  if (id_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = id_;
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void AlphabetHmmPrior::set_allocated_id(::std::string* id) {
  if (id_ != &::google::protobuf::internal::kEmptyString) {
    delete id_;
  }
  if (id) {
    set_has_id();
    id_ = id;
  } else {
    clear_has_id();
    id_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .hello.OutputId output_id = 2;
inline bool AlphabetHmmPrior::has_output_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AlphabetHmmPrior::set_has_output_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AlphabetHmmPrior::clear_has_output_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AlphabetHmmPrior::clear_output_id() {
  output_id_ = 0;
  clear_has_output_id();
}
inline ::hello::OutputId AlphabetHmmPrior::output_id() const {
  return static_cast< ::hello::OutputId >(output_id_);
}
inline void AlphabetHmmPrior::set_output_id(::hello::OutputId value) {
  assert(::hello::OutputId_IsValid(value));
  set_has_output_id();
  output_id_ = value;
}

// optional int64 date_created_utc = 3;
inline bool AlphabetHmmPrior::has_date_created_utc() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AlphabetHmmPrior::set_has_date_created_utc() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AlphabetHmmPrior::clear_has_date_created_utc() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AlphabetHmmPrior::clear_date_created_utc() {
  date_created_utc_ = GOOGLE_LONGLONG(0);
  clear_has_date_created_utc();
}
inline ::google::protobuf::int64 AlphabetHmmPrior::date_created_utc() const {
  return date_created_utc_;
}
inline void AlphabetHmmPrior::set_date_created_utc(::google::protobuf::int64 value) {
  set_has_date_created_utc();
  date_created_utc_ = value;
}

// optional int64 date_updated_utc = 4;
inline bool AlphabetHmmPrior::has_date_updated_utc() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AlphabetHmmPrior::set_has_date_updated_utc() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AlphabetHmmPrior::clear_has_date_updated_utc() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AlphabetHmmPrior::clear_date_updated_utc() {
  date_updated_utc_ = GOOGLE_LONGLONG(0);
  clear_has_date_updated_utc();
}
inline ::google::protobuf::int64 AlphabetHmmPrior::date_updated_utc() const {
  return date_updated_utc_;
}
inline void AlphabetHmmPrior::set_date_updated_utc(::google::protobuf::int64 value) {
  set_has_date_updated_utc();
  date_updated_utc_ = value;
}

// optional .hello.RealMatrix log_state_transition_numerator = 5;
inline bool AlphabetHmmPrior::has_log_state_transition_numerator() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void AlphabetHmmPrior::set_has_log_state_transition_numerator() {
  _has_bits_[0] |= 0x00000010u;
}
inline void AlphabetHmmPrior::clear_has_log_state_transition_numerator() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void AlphabetHmmPrior::clear_log_state_transition_numerator() {
  if (log_state_transition_numerator_ != NULL) log_state_transition_numerator_->::hello::RealMatrix::Clear();
  clear_has_log_state_transition_numerator();
}
inline const ::hello::RealMatrix& AlphabetHmmPrior::log_state_transition_numerator() const {
  return log_state_transition_numerator_ != NULL ? *log_state_transition_numerator_ : *default_instance_->log_state_transition_numerator_;
}
inline ::hello::RealMatrix* AlphabetHmmPrior::mutable_log_state_transition_numerator() {
  set_has_log_state_transition_numerator();
  if (log_state_transition_numerator_ == NULL) log_state_transition_numerator_ = new ::hello::RealMatrix;
  return log_state_transition_numerator_;
}
inline ::hello::RealMatrix* AlphabetHmmPrior::release_log_state_transition_numerator() {
  clear_has_log_state_transition_numerator();
  ::hello::RealMatrix* temp = log_state_transition_numerator_;
  log_state_transition_numerator_ = NULL;
  return temp;
}
inline void AlphabetHmmPrior::set_allocated_log_state_transition_numerator(::hello::RealMatrix* log_state_transition_numerator) {
  delete log_state_transition_numerator_;
  log_state_transition_numerator_ = log_state_transition_numerator;
  if (log_state_transition_numerator) {
    set_has_log_state_transition_numerator();
  } else {
    clear_has_log_state_transition_numerator();
  }
}

// repeated .hello.RealMatrix log_observation_model_numerator = 6;
inline int AlphabetHmmPrior::log_observation_model_numerator_size() const {
  return log_observation_model_numerator_.size();
}
inline void AlphabetHmmPrior::clear_log_observation_model_numerator() {
  log_observation_model_numerator_.Clear();
}
inline const ::hello::RealMatrix& AlphabetHmmPrior::log_observation_model_numerator(int index) const {
  return log_observation_model_numerator_.Get(index);
}
inline ::hello::RealMatrix* AlphabetHmmPrior::mutable_log_observation_model_numerator(int index) {
  return log_observation_model_numerator_.Mutable(index);
}
inline ::hello::RealMatrix* AlphabetHmmPrior::add_log_observation_model_numerator() {
  return log_observation_model_numerator_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hello::RealMatrix >&
AlphabetHmmPrior::log_observation_model_numerator() const {
  return log_observation_model_numerator_;
}
inline ::google::protobuf::RepeatedPtrField< ::hello::RealMatrix >*
AlphabetHmmPrior::mutable_log_observation_model_numerator() {
  return &log_observation_model_numerator_;
}

// repeated string log_observation_model_ids = 7;
inline int AlphabetHmmPrior::log_observation_model_ids_size() const {
  return log_observation_model_ids_.size();
}
inline void AlphabetHmmPrior::clear_log_observation_model_ids() {
  log_observation_model_ids_.Clear();
}
inline const ::std::string& AlphabetHmmPrior::log_observation_model_ids(int index) const {
  return log_observation_model_ids_.Get(index);
}
inline ::std::string* AlphabetHmmPrior::mutable_log_observation_model_ids(int index) {
  return log_observation_model_ids_.Mutable(index);
}
inline void AlphabetHmmPrior::set_log_observation_model_ids(int index, const ::std::string& value) {
  log_observation_model_ids_.Mutable(index)->assign(value);
}
inline void AlphabetHmmPrior::set_log_observation_model_ids(int index, const char* value) {
  log_observation_model_ids_.Mutable(index)->assign(value);
}
inline void AlphabetHmmPrior::set_log_observation_model_ids(int index, const char* value, size_t size) {
  log_observation_model_ids_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* AlphabetHmmPrior::add_log_observation_model_ids() {
  return log_observation_model_ids_.Add();
}
inline void AlphabetHmmPrior::add_log_observation_model_ids(const ::std::string& value) {
  log_observation_model_ids_.Add()->assign(value);
}
inline void AlphabetHmmPrior::add_log_observation_model_ids(const char* value) {
  log_observation_model_ids_.Add()->assign(value);
}
inline void AlphabetHmmPrior::add_log_observation_model_ids(const char* value, size_t size) {
  log_observation_model_ids_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
AlphabetHmmPrior::log_observation_model_ids() const {
  return log_observation_model_ids_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
AlphabetHmmPrior::mutable_log_observation_model_ids() {
  return &log_observation_model_ids_;
}

// repeated double log_denominator = 8;
inline int AlphabetHmmPrior::log_denominator_size() const {
  return log_denominator_.size();
}
inline void AlphabetHmmPrior::clear_log_denominator() {
  log_denominator_.Clear();
}
inline double AlphabetHmmPrior::log_denominator(int index) const {
  return log_denominator_.Get(index);
}
inline void AlphabetHmmPrior::set_log_denominator(int index, double value) {
  log_denominator_.Set(index, value);
}
inline void AlphabetHmmPrior::add_log_denominator(double value) {
  log_denominator_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
AlphabetHmmPrior::log_denominator() const {
  return log_denominator_;
}
inline ::google::protobuf::RepeatedField< double >*
AlphabetHmmPrior::mutable_log_denominator() {
  return &log_denominator_;
}

// repeated double pi = 9;
inline int AlphabetHmmPrior::pi_size() const {
  return pi_.size();
}
inline void AlphabetHmmPrior::clear_pi() {
  pi_.Clear();
}
inline double AlphabetHmmPrior::pi(int index) const {
  return pi_.Get(index);
}
inline void AlphabetHmmPrior::set_pi(int index, double value) {
  pi_.Set(index, value);
}
inline void AlphabetHmmPrior::add_pi(double value) {
  pi_.Add(value);
}
inline const ::google::protobuf::RepeatedField< double >&
AlphabetHmmPrior::pi() const {
  return pi_;
}
inline ::google::protobuf::RepeatedField< double >*
AlphabetHmmPrior::mutable_pi() {
  return &pi_;
}

// repeated int32 end_states = 10;
inline int AlphabetHmmPrior::end_states_size() const {
  return end_states_.size();
}
inline void AlphabetHmmPrior::clear_end_states() {
  end_states_.Clear();
}
inline ::google::protobuf::int32 AlphabetHmmPrior::end_states(int index) const {
  return end_states_.Get(index);
}
inline void AlphabetHmmPrior::set_end_states(int index, ::google::protobuf::int32 value) {
  end_states_.Set(index, value);
}
inline void AlphabetHmmPrior::add_end_states(::google::protobuf::int32 value) {
  end_states_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AlphabetHmmPrior::end_states() const {
  return end_states_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AlphabetHmmPrior::mutable_end_states() {
  return &end_states_;
}

// repeated int32 minimum_state_durations = 11;
inline int AlphabetHmmPrior::minimum_state_durations_size() const {
  return minimum_state_durations_.size();
}
inline void AlphabetHmmPrior::clear_minimum_state_durations() {
  minimum_state_durations_.Clear();
}
inline ::google::protobuf::int32 AlphabetHmmPrior::minimum_state_durations(int index) const {
  return minimum_state_durations_.Get(index);
}
inline void AlphabetHmmPrior::set_minimum_state_durations(int index, ::google::protobuf::int32 value) {
  minimum_state_durations_.Set(index, value);
}
inline void AlphabetHmmPrior::add_minimum_state_durations(::google::protobuf::int32 value) {
  minimum_state_durations_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
AlphabetHmmPrior::minimum_state_durations() const {
  return minimum_state_durations_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
AlphabetHmmPrior::mutable_minimum_state_durations() {
  return &minimum_state_durations_;
}

// -------------------------------------------------------------------

// AlphabetHmmScratchPad

// optional int64 last_date_updated_utc = 1;
inline bool AlphabetHmmScratchPad::has_last_date_updated_utc() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AlphabetHmmScratchPad::set_has_last_date_updated_utc() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AlphabetHmmScratchPad::clear_has_last_date_updated_utc() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AlphabetHmmScratchPad::clear_last_date_updated_utc() {
  last_date_updated_utc_ = GOOGLE_LONGLONG(0);
  clear_has_last_date_updated_utc();
}
inline ::google::protobuf::int64 AlphabetHmmScratchPad::last_date_updated_utc() const {
  return last_date_updated_utc_;
}
inline void AlphabetHmmScratchPad::set_last_date_updated_utc(::google::protobuf::int64 value) {
  set_has_last_date_updated_utc();
  last_date_updated_utc_ = value;
}

// repeated .hello.AlphabetHmmPrior model_deltas = 2;
inline int AlphabetHmmScratchPad::model_deltas_size() const {
  return model_deltas_.size();
}
inline void AlphabetHmmScratchPad::clear_model_deltas() {
  model_deltas_.Clear();
}
inline const ::hello::AlphabetHmmPrior& AlphabetHmmScratchPad::model_deltas(int index) const {
  return model_deltas_.Get(index);
}
inline ::hello::AlphabetHmmPrior* AlphabetHmmScratchPad::mutable_model_deltas(int index) {
  return model_deltas_.Mutable(index);
}
inline ::hello::AlphabetHmmPrior* AlphabetHmmScratchPad::add_model_deltas() {
  return model_deltas_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >&
AlphabetHmmScratchPad::model_deltas() const {
  return model_deltas_;
}
inline ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >*
AlphabetHmmScratchPad::mutable_model_deltas() {
  return &model_deltas_;
}

// -------------------------------------------------------------------

// AlphabetHmmUserModel

// repeated .hello.AlphabetHmmPrior models = 1;
inline int AlphabetHmmUserModel::models_size() const {
  return models_.size();
}
inline void AlphabetHmmUserModel::clear_models() {
  models_.Clear();
}
inline const ::hello::AlphabetHmmPrior& AlphabetHmmUserModel::models(int index) const {
  return models_.Get(index);
}
inline ::hello::AlphabetHmmPrior* AlphabetHmmUserModel::mutable_models(int index) {
  return models_.Mutable(index);
}
inline ::hello::AlphabetHmmPrior* AlphabetHmmUserModel::add_models() {
  return models_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >&
AlphabetHmmUserModel::models() const {
  return models_;
}
inline ::google::protobuf::RepeatedPtrField< ::hello::AlphabetHmmPrior >*
AlphabetHmmUserModel::mutable_models() {
  return &models_;
}

// repeated .hello.Transition forbiddeden_motion_transitions = 2;
inline int AlphabetHmmUserModel::forbiddeden_motion_transitions_size() const {
  return forbiddeden_motion_transitions_.size();
}
inline void AlphabetHmmUserModel::clear_forbiddeden_motion_transitions() {
  forbiddeden_motion_transitions_.Clear();
}
inline const ::hello::Transition& AlphabetHmmUserModel::forbiddeden_motion_transitions(int index) const {
  return forbiddeden_motion_transitions_.Get(index);
}
inline ::hello::Transition* AlphabetHmmUserModel::mutable_forbiddeden_motion_transitions(int index) {
  return forbiddeden_motion_transitions_.Mutable(index);
}
inline ::hello::Transition* AlphabetHmmUserModel::add_forbiddeden_motion_transitions() {
  return forbiddeden_motion_transitions_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::hello::Transition >&
AlphabetHmmUserModel::forbiddeden_motion_transitions() const {
  return forbiddeden_motion_transitions_;
}
inline ::google::protobuf::RepeatedPtrField< ::hello::Transition >*
AlphabetHmmUserModel::mutable_forbiddeden_motion_transitions() {
  return &forbiddeden_motion_transitions_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace hello

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::hello::OutputId>() {
  return ::hello::OutputId_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_online_5fhmm_2eproto__INCLUDED
