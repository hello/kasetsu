#!/usr/bin/python

import requests
import argparse
import datetime
import calendar
import os
import numpy
from matplotlib.pyplot import *
import json

k_server = 'https://research-api-benjo.hello.is'
k_binned_url = k_server + '/v1/datascience/partnerdiff/'

k_magic_auth=os.environ['RESEARCH_TOKEN']
k_headers = {'Authorization' : 'Bearer %s' % k_magic_auth}

k_user_list = [15069, 15326, 1931, 15233, 15233, 15329, 15329, 1768, 1768, 15354, 15354, 1414, 1414, 1508, 1508, 1508, 15523, 15523, 15523, 1792, 15546, 15387, 1899, 15524, 1541, 1508, 1541, 1508, 1508, 1506, 15247, 1496, 15364, 15364, 15730, 15730, 15292, 15249, 1930, 15423, 1400, 1400, 1545, 1545, 15110, 15307, 15143, 15145, 15365, 1763, 1763, 1588, 15217, 15315, 1498, 1498, 15265, 15238, 15086, 15265, 15234, 15234, 15234, 15296, 1614, 1614, 1614, 15539, 15539, 15539, 1727, 15247, 15510, 1861, 1861, 15536, 15348, 15348, 15070, 15633, 15711, 15639, 15633, 15294, 15294, 1278, 15070, 15070, 15070, 1515, 1515, 1863, 1745, 1745, 1863, 15302, 15374, 15302, 15073, 15073, 15512, 15512, 15229, 15229, 1479, 1522, 1522, 1522, 15534, 15534, 15583, 15583, 1323, 1323, 15159, 15159, 15486, 1839, 1839, 1839, 15292, 1184, 1676, 15604, 15601, 15601, 15176, 1489, 1489, 1489, 15733, 1487, 1487, 1599, 15070, 1599, 15257, 15257, 15070, 1599, 15540, 15540, 15357, 1112, 15357, 1323, 1323, 15357, 15469, 15469, 15094, 1112, 15711, 15121, 15404, 15711, 15711, 15117, 15457, 15457, 1796, 1796, 15305, 15587, 15281, 15594, 1604, 1604, 1001, 1001, 1001, 1001, 15542, 1562, 1562, 15057, 1562, 1414, 1414, 15102, 15481, 1609, 15481, 1323, 1323, 15574, 15574, 15464, 15464, 15242, 15242, 15153, 1967, 15363, 15363, 15356, 15356, 15356, 15355, 15084, 15429, 15429, 15689, 1516, 15398, 15398, 15398, 15398, 15259, 1409, 15167, 15173, 15070, 15070, 1746, 15281, 15281, 15668, 1866, 15314, 1546, 1524, 15442, 1013, 1013, 15446, 15662, 1506, 1012, 1012, 1573, 1573, 15120, 15120, 15337, 15347, 15347, 15399, 15604, 15155, 1574, 1536, 1536, 1536, 15154, 15343, 15532, 15415, 1522, 1522, 1068, 15399, 1470, 1470, 15602, 1470, 15602, 1589, 15355, 15245, 15245, 15245, 15155, 1969, 1969, 15254, 15254, 15459, 1479, 1721, 1721, 15523, 15523, 1541, 1541, 15608, 1541, 15608, 15610, 15610, 15608, 15073, 15073, 15073, 15264, 1414, 1414, 1496, 15470, 1536, 15470, 1607, 1607, 15292, 1400, 1400, 15621, 1930, 15365, 15365, 15244, 15187, 15365, 15365, 1545, 15376, 1545, 15376, 15089, 15089, 15098, 15069, 15069, 1792, 1792, 15132, 1588, 15105, 15233, 15105, 15233, 15296, 1849, 1849, 1931, 15203, 15203, 15375, 15375, 1498, 1498, 15524, 15524, 15292, 15292, 15586, 15689, 15689, 15118, 15118, 1614, 1614, 15247, 15247, 15143, 15143, 15386, 15667, 1560, 15442, 15226, 15338, 15338, 15070, 15145, 1839, 1731, 1731, 15235, 15765, 15253, 15253, 15662, 15662, 15539, 15539, 15050, 15226, 15226, 15226, 1566, 1566, 1437, 1437, 1323, 1489, 1489, 1556, 1556, 1517, 1517, 15357, 15355, 15357, 15663, 15663, 1487, 1487, 15254, 15254, 15387, 15486, 15486, 1190, 15486, 15486, 15486, 15443, 15443, 15574, 15604, 15356, 15070, 15070, 15070, 15356, 15070, 15489, 15655, 1863, 1863, 1834, 1158, 1323, 15265, 15366, 15742, 15241, 15614, 15610, 15090, 15392, 15090, 1113, 15536, 15452, 15452, 15452, 15711, 15343, 1437, 1437, 1562, 1211, 15594, 15084, 15084, 15185, 1796, 15245, 15339, 15311, 15339, 15311, 1727] 
a = [1727, 15765, 15417, 1788, 1788, 15355, 15132, 15132, 1381, 1381, 15074, 15074, 15508, 15508, 1528, 1062, 1062, 1820, 1820, 1820, 1820, 15663, 15185, 1446, 1446, 15355, 15355, 1508, 1508, 1748, 15271, 1524, 1524, 1190, 1725, 1190, 1725, 1190, 15469, 1855, 1158, 15256, 15256, 1506, 15309, 15309, 1702, 1479, 1092, 1768, 15398, 1092, 15398, 1092, 1092, 1438, 1438, 15086, 15086, 15777, 1228, 1228, 15504, 15777, 15159, 15159, 15216, 15154, 15154, 15599, 15354, 15420, 15103, 15365, 15365, 15777, 15534, 15777, 15361, 15375, 15666, 15512, 15512, 15347, 1810, 1588, 15399, 15399, 15111, 15302, 1562, 15292, 15292, 15402, 15402, 1546, 1038, 15042, 15045, 15057, 15266, 1455, 1455, 1455, 1455, 1969, 1762, 15329, 15621, 15621, 15621, 15523, 15523, 1455, 15566, 1508, 1400, 1400, 1508, 1508, 1508, 1541, 1541, 15366, 15105, 15247, 15326, 15584, 1839, 15488, 15354, 1931, 15354, 15354, 15658, 15233, 15233, 1930, 15655, 15655, 15639, 1545, 1545, 1861, 1861, 15183, 15183, 15667, 15667, 15249, 15249, 15439, 1622, 1849, 15070, 1414, 15592, 1414, 1414, 15234, 1614, 1614, 1614, 15069, 15069, 15524, 15524, 1807, 15307, 15307, 15307, 1498, 1498, 1498, 1485, 15413, 15413, 1278, 1278, 15302, 15302, 15070, 15070, 1748, 1748, 15539, 15374, 1812, 1812, 1812, 1812, 1812, 15364, 1522, 1522, 15155,15365, 15821, 15070, 15775, 15775, 16130, 16130, 15828, 15828, 16028, 16204, 1614, 15086, 15108, 15130, 15302, 15302, 15996, 15996, 16140, 16140, 15564, 15294, 15294, 16327, 16327, 15118, 15314, 15314, 1278, 15802, 15802, 15780, 15357, 15780, 15871, 15871, 15364, 15070, 15070, 15292, 15070, 15292, 16336, 15926, 15324, 15837, 16058, 16058, 16192, 15950, 16011, 15837, 16141, 16141, 15356, 1578, 15356, 16337, 15356, 16268, 15924, 16108, 15860, 16108, 16108, 15860, 1113, 15472, 15875, 15472, 16125, 15790, 16149, 16149, 16195, 1463, 1463, 1463, 1479, 16283, 15469, 15469, 16137, 16144, 1500, 15375, 15119, 1562, 1562, 15604, 1843, 15984, 15984, 15490, 15950, 15950, 16128, 15950, 16165, 15901, 1500, 1500, 15953, 15870, 15870, 15229, 15229, 16192, 1823, 1823, 15084, 15084, 15689, 15689, 15689, 16137, 15869, 1450, 1450, 1450, 1450, 16118, 16118, 1393, 1393, 1393, 16138, 16117, 1025, 1025, 15949, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1053, 1762, 1762, 15173, 15733, 16010, 15105, 1539, 1190, 15992, 16210, 16210, 1731, 15411, 15466, 15466, 1062, 1062, 15818, 15050, 1361, 15413, 15413, 16020, 16020, 16020, 16020, 16039, 15935, 15935, 15935, 15935, 15499, 15033, 1228, 1228, 1228, 1228, 15856, 1536, 15033, 15074, 1428, 15074, 15190, 15074, 1488, 15867, 16077, 16077, 16321, 16321, 1849, 15274, 15899, 15822, 16339, 16339, 1965, 1965, 15976, 16337, 15514, 15514, 1409, 15073, 15268, 16099, 16079, 15512, 15512, 15217, 1755, 15591, 1707, 15524, 15524, 15524, 16373, 15352, 15105, 1493, 1964, 15190, 15469, 16076, 16058, 15446, 16333, 16393, 16053, 15304, 15304, 1093, 1721, 1721, 1455, 1455, 15886, 15886, 15886, 15254, 15254, 15469, 15286, 15286, 1768, 1768, 1545, 1545, 15968, 16154, 15883, 15883, 16223, 16223, 16273, 16234, 16273, 16234, 16416, 16077, 1498, 1508, 1498, 1508, 15608, 15608, 15676, 15329, 16156, 16156, 15783, 16195, 15855, 15926, 16164, 16164, 16164, 16256, 15323, 15323, 16206, 15920, 15060, 1491, 16063, 16063, 16063, 15448, 16270, 1541, 16434, 1541, 16421, 16202, 15676, 16249, 16263, 15524, 16206, 15085, 15292, 15292, 16032, 16032, 15382, 15365, 16343, 15365, 15920, 15920, 1400, 1400, 15676, 15315, 15315, 16170, 15094, 15094, 15089, 15089, 15098, 15098, 16104, 15159, 15159, 15159, 16023, 16020, 16020, 15935, 15935, 15846, 1788, 1748, 1839, 1445, 1445, 15393, 15287, 15287, 15249, 1442, 16308, 15705, 16178, 15809, 16266, 16077, 15877, 15877, 16065, 15792, 15792, 15965, 15965, 1507, 15947, 1507, 1507, 1546, 1614, 1614, 1372, 1614, 1372, 1372, 15904, 15813, 15904, 16215, 1676, 16215, 15222, 15222, 1853, 15892, 15821, 15070, 15264, 1964, 15325, 15432, 15374, 15739, 15739, 15775, 16130, 16235, 16140, 15911, 15247, 1761, 1761, 1323, 1323, 1566, 1566, 15229, 15802, 15658, 16028, 16028, 15472, 15955, 15955, 16086, 16339, 16086, 16339, 15234, 15234, 15274, 15733, 15733, 1481, 15357, 15357, 15950, 15271, 16126, 16126, 16112, 16236, 15190, 16013, 16013, 15281, 15655, 15281, 15281, 15944, 15944, 15966, 15966, 15274, 15837, 16118, 16118, 15808, 1184, 1184, 1562, 16216, 16216, 16435, 1725, 1725, 1323, 1849, 1002, 1002, 1609, 15822, 15822, 15958, 1516, 1479, 1002, 15939, 15962, 15962, 16277, 16277, 15245, 15245, 16110, 16110, 15917, 1776, 16372, 16210, 16210, 16210, 1062, 1062, 1062, 1522, 1522, 15429, 15429, 1056, 1310, 16286, 1310, 16372, 16286, 15841, 1500, 16209, 15084, 16194, 1500, 1500, 1500, 1500, 15655, 15655, 16414, 16117, 16117, 15871, 15871, 15429, 15294, 16190, 16254, 15261, 16254, 16373, 1053, 1053, 1053, 1053, 1053, 1393, 1393, 1393, 1393, 16030, 1965, 1503, 1050, 1050, 16220, 1056, 16220, 16408, 16408, 15304, 15304, 15939, 15233, 15847, 15800, 16040, 15800, 1446, 15858, 1363, 1363, 1363, 15185, 15185, 16340, 1323, 1323, 16024, 1614, 1614, 15992, 15992, 15992, 15984, 16229, 16229, 1072, 1072, 1477, 1477, 1477, 16170, 15467, 16170, 1556, 16170, 1409, 15920, 15920, 15920, 16124, 1012, 16276, 15291, 15909, 15512, 15512, 15922, 16443, 16318, 16318, 15477, 15994, 15888, 15070, 15711, 15972, 15972, 15972, 1522, 1522, 16125, 16125, 15343, 15863, 16120, 16120, 1603, 15542, 15542, 15542, 1063, 1702, 1702, 15858, 16093, 15886, 15886, 15341, 15903, 16418, 16130, 15892, 15892, 15855, 16130, 16130]

def get_datestr_as_timestamp(datestr):
    mydate = datetime.datetime.strptime(datestr, '%Y-%m-%d')
    ts = calendar.timegm(mydate.utctimetuple())
    print ts
    
    return 1000 * ts;

def get_data_for_user(date_string, account_id, num_days):

    ts = "%d" % get_datestr_as_timestamp(date_string)
    params = {  'from_ts' : ts,  
                'account_id' : str(account_id),  
                'num_days' : num_days, 
             }
    
   
    
    d = None
    response = requests.get(k_binned_url,params=params,headers=k_headers)
    
    if not response.ok or response.status_code != requests.codes.ok:
        print 'fail with %d ' % (response.status_code)
        print 'content',response.content
    else:
        d = response.json()

        if d.has_key('code') and int(d['code']) == 204:
            print d['message']
            return None
              
        print 'got data for user ',  account_id
        xvec = numpy.array(d['data']).transpose()
        tvec = numpy.array(d['ts_utc'])
        offset = d['timezone_offset_millis']
        tvec += offset
        tvec /= 1000
        
        mydict = {}
        mydict['times'] = tvec.tolist()
        mydict['data'] = xvec.tolist()
        
        return mydict
        
    return None

if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument('--date', help = 'target date',required=True)
    parser.add_argument('-n','--numdays',default=1, help = 'num days to retrieve')
    parser.add_argument('-u','--user',help='user id number')
    parser.add_argument('--plot',default=False,action='store_true')
    parser.add_argument('-o','--output',default='diffs.csv')
    args = parser.parse_args()

    users = k_user_list

    if args.user != None:
        users = [int(args.user)]

    signal = []
    for user in users:
        result = get_data_for_user(args.date,user,args.numdays)

        if not isinstance(result,dict) or not result.has_key('data'):
            continue

        if len(result['data']) == 0:
            continue
        
        x = numpy.array(result['data']).transpose().tolist()
    
        if args.plot:
            plot(x[0])
            show()
               
        signal.extend(x[0])


    if len(signal) > 0:
        print 'saving to %s' % args.output
        f = open(args.output,'wb')
        json.dump(signal,f)
        f.close()
    else:
        print 'no data found'

